From: Matthias Clasen <mclasen@redhat.com>
Date: Sat, 28 Sep 2024 10:26:42 -0400
Subject: wayland: Improve our cursor size selection

When picking a cursor image size for a given size, look for sizes
that do better when scaled by the viewporter:
- exact size
- twice the size
- closest larger size
- closest size

(cherry picked from commit 3768c751c5799a03459a7969fbb88d1046fe1c95)
---
 gdk/wayland/cursor/xcursor.c | 51 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

diff --git a/gdk/wayland/cursor/xcursor.c b/gdk/wayland/cursor/xcursor.c
index 8ee675b..7570b06 100644
--- a/gdk/wayland/cursor/xcursor.c
+++ b/gdk/wayland/cursor/xcursor.c
@@ -402,6 +402,38 @@ _XcursorFindBestSize (XcursorFileHeader *fileHeader,
 	if (fileHeader->tocs[n].type != XCURSOR_IMAGE_TYPE)
 	    continue;
 	thisSize = fileHeader->tocs[n].subtype;
+	if (thisSize == size)
+        {
+            bestSize = size;
+	    nsizes++;
+        }
+    }
+
+    if (bestSize)
+        goto done;
+
+    for (n = 0; n < fileHeader->ntoc; n++)
+    {
+	if (fileHeader->tocs[n].type != XCURSOR_IMAGE_TYPE)
+	    continue;
+	thisSize = fileHeader->tocs[n].subtype;
+	if (thisSize == 2 * size)
+        {
+            bestSize = 2 * size;
+	    nsizes++;
+        }
+    }
+
+    if (bestSize)
+        goto done;
+
+    for (n = 0; n < fileHeader->ntoc; n++)
+    {
+	if (fileHeader->tocs[n].type != XCURSOR_IMAGE_TYPE)
+	    continue;
+	thisSize = fileHeader->tocs[n].subtype;
+        if (thisSize < size)
+            continue;
 	if (!bestSize || dist (thisSize, size) < dist (bestSize, size))
 	{
 	    bestSize = thisSize;
@@ -410,6 +442,25 @@ _XcursorFindBestSize (XcursorFileHeader *fileHeader,
 	else if (thisSize == bestSize)
 	    nsizes++;
     }
+
+    if (bestSize)
+        goto done;
+
+    for (n = 0; n < fileHeader->ntoc; n++)
+    {
+	if (fileHeader->tocs[n].type != XCURSOR_IMAGE_TYPE)
+	    continue;
+	thisSize = fileHeader->tocs[n].subtype;
+	if (!bestSize || dist (thisSize, size) < dist (bestSize, size))
+	{
+	    bestSize = thisSize;
+	    nsizes = 1;
+	}
+	else if (thisSize == bestSize)
+	    nsizes++;
+    }
+
+done:
     *nsizesp = nsizes;
     return bestSize;
 }
