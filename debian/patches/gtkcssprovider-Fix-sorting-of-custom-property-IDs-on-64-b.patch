From: Simon McVittie <smcv@debian.org>
Date: Sat, 31 Aug 2024 02:26:57 +0100
Subject: gtkcssprovider: Fix sorting of custom property IDs on 64-bit
 big-endian

This function is used to sort a GPtrArray of "pointers" which are
actually GINT_TO_POINTER (id), so a and b are pointers to pointer-sized
quantities.

Previously it was assuming that both were int-sized quantities,
dereferencing them to get the first sizeof(int) bytes, and then
redundantly casting those bytes to int. However, on a 64-bit big-endian
platform, the first few bytes of a larger-than-int quantity are the
most significant part, in practice 0, causing an out-of-bounds array
access and a crash. This was visible in the
`gtk:css / parser variables.css` automated test.

Bug-Debian: https://bugs.debian.org/1079546
Forwarded: https://gitlab.gnome.org/GNOME/gtk/-/merge_requests/7672
Signed-off-by: Simon McVittie <smcv@debian.org>
Applied-upstream: 4.15.7, commit:a524524ffdf13e674e376a8ef6d969d1fd8f6d25
---
 gtk/gtkcssprovider.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/gtk/gtkcssprovider.c b/gtk/gtkcssprovider.c
index 83f63e1..efb69ae 100644
--- a/gtk/gtkcssprovider.c
+++ b/gtk/gtkcssprovider.c
@@ -1660,16 +1660,18 @@ compare_properties (gconstpointer a, gconstpointer b, gpointer style)
                  _gtk_style_property_get_name (GTK_STYLE_PROPERTY (styles[*ub].property)));
 }
 
+/* This is looking into a GPtrArray where each "pointer" is actually
+ * GINT_TO_POINTER (id), so a and b are pointers to pointer-sized quantities */
 static int
 compare_custom_properties (gconstpointer a, gconstpointer b, gpointer user_data)
 {
   GtkCssCustomPropertyPool *pool = user_data;
-  int id1 = GPOINTER_TO_INT (*((const int *) a));
-  int id2 = GPOINTER_TO_INT (*((const int *) b));
+  const void * const *ap = a;
+  const void * const *bp = b;
   const char *name1, *name2;
 
-  name1 = gtk_css_custom_property_pool_get_name (pool, id1);
-  name2 = gtk_css_custom_property_pool_get_name (pool, id2);
+  name1 = gtk_css_custom_property_pool_get_name (pool, GPOINTER_TO_INT (*ap));
+  name2 = gtk_css_custom_property_pool_get_name (pool, GPOINTER_TO_INT (*bp));
 
   return strcmp (name1, name2);
 }
