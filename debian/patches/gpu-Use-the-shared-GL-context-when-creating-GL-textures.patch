From: Benjamin Otte <otte@redhat.com>
Date: Fri, 23 Aug 2024 18:59:19 +0200
Subject: gpu: Use the shared GL context when creating GL textures

The non-shared context's surface must survive the lifetime of the
GL texture, and when the renderer gets unrealized the surface goes away,
but we cannot guarantee that all GL textures have been destroyed by
then.

So better use a context we know will survive becuase it isn't bound to a
surface.

This is the same fix for NGL as f3ac0535f8d520c32efed587dfb006f23ea3ee34
was for GL.

(cherry picked from commit 73c94cf1d6519a919e061eb48517497e6b766a51)

Origin: upstream, after 4.15.5
---
 gsk/gpu/gskgpudownloadop.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/gsk/gpu/gskgpudownloadop.c b/gsk/gpu/gskgpudownloadop.c
index 50ead4b..c3fa658 100644
--- a/gsk/gpu/gskgpudownloadop.c
+++ b/gsk/gpu/gskgpudownloadop.c
@@ -15,6 +15,7 @@
 
 #include <glib/gstdio.h>
 
+#include "gdk/gdkdisplayprivate.h"
 #include "gdk/gdkdmabuftexturebuilderprivate.h"
 #include "gdk/gdkdmabuftextureprivate.h"
 #include "gdk/gdkglcontextprivate.h"
@@ -296,7 +297,9 @@ gsk_gpu_download_op_gl_command (GskGpuOp          *op,
   GdkGLContext *context;
   guint texture_id;
 
-  context = GDK_GL_CONTEXT (gsk_gpu_frame_get_context (frame));
+  /* Don't use the renderer context, the texture might survive the frame
+   * and its surface */
+  context = gdk_display_get_gl_context (gsk_gpu_device_get_display (gsk_gpu_frame_get_device (frame)));
   texture_id = gsk_gl_image_steal_texture (GSK_GL_IMAGE (self->image));
 
 #ifdef HAVE_DMABUF
