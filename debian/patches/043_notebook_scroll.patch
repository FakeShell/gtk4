Reverts ad48f4d52bbac6139dd829fcc421ad16441f34d2
Add back the feature but in a different way:
* requires the Alt modifier
* works from the whole area
See GNOME #630226 and #145244

diff --git a/gtk/gtkcalendar.c b/gtk/gtkcalendar.c
index cff79bf..1174692 100644
--- a/gtk/gtkcalendar.c
+++ b/gtk/gtkcalendar.c
@@ -3161,6 +3161,10 @@ gtk_calendar_scroll (GtkWidget      *widget,
 {
   GtkCalendar *calendar = GTK_CALENDAR (widget);
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (event->direction == GDK_SCROLL_UP)
     {
       if (!gtk_widget_has_focus (widget))
diff --git a/gtk/gtkcombobox.c b/gtk/gtkcombobox.c
index c0bf2c8..e4149a7 100644
--- a/gtk/gtkcombobox.c
+++ b/gtk/gtkcombobox.c
@@ -3058,6 +3058,10 @@ gtk_combo_box_scroll_event (GtkWidget          *widget,
   GtkTreeIter iter;
   GtkTreeIter new_iter;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (!gtk_combo_box_get_active_iter (combo_box, &iter))
     return TRUE;
 
diff --git a/gtk/gtkmenu.c b/gtk/gtkmenu.c
index bb327b5..7b26987 100644
--- a/gtk/gtkmenu.c
+++ b/gtk/gtkmenu.c
@@ -3958,6 +3958,10 @@ gtk_menu_scroll (GtkWidget      *widget,
 {
   GtkMenu *menu = GTK_MENU (widget);
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   switch (event->direction)
     {
     case GDK_SCROLL_RIGHT:
diff --git a/gtk/gtknotebook.c b/gtk/gtknotebook.c
index a6bf731..9e028d0 100644
--- a/gtk/gtknotebook.c
+++ b/gtk/gtknotebook.c
@@ -342,6 +342,8 @@ static void gtk_notebook_size_allocate       (GtkWidget        *widget,
                                               GtkAllocation    *allocation);
 static gint gtk_notebook_draw                (GtkWidget        *widget,
                                               cairo_t          *cr);
+static gboolean gtk_notebook_scroll          (GtkWidget        *widget,
+                                              GdkEventScroll   *event);
 static gint gtk_notebook_button_press        (GtkWidget        *widget,
                                               GdkEventButton   *event);
 static gint gtk_notebook_button_release      (GtkWidget        *widget,
@@ -645,6 +647,7 @@ gtk_notebook_class_init (GtkNotebookClass *class)
   widget_class->get_preferred_height_for_width = gtk_notebook_get_preferred_height_for_width;
   widget_class->size_allocate = gtk_notebook_size_allocate;
   widget_class->draw = gtk_notebook_draw;
+  widget_class->scroll_event = gtk_notebook_scroll;
   widget_class->button_press_event = gtk_notebook_button_press;
   widget_class->button_release_event = gtk_notebook_button_release;
   widget_class->popup_menu = gtk_notebook_popup_menu;
@@ -1881,7 +1884,8 @@ gtk_notebook_realize (GtkWidget *widget)
   attributes.event_mask = gtk_widget_get_events (widget);
   attributes.event_mask |= (GDK_BUTTON_PRESS_MASK |
                             GDK_BUTTON_RELEASE_MASK | GDK_KEY_PRESS_MASK |
-                            GDK_POINTER_MOTION_MASK | GDK_LEAVE_NOTIFY_MASK);
+                            GDK_POINTER_MOTION_MASK | GDK_LEAVE_NOTIFY_MASK |
+                            GDK_SCROLL_MASK);
   attributes_mask = GDK_WA_X | GDK_WA_Y;
 
   priv->event_window = gdk_window_new (gtk_widget_get_parent_window (widget),
@@ -2844,6 +2848,38 @@ get_widget_coordinates (GtkWidget *widget,
     return FALSE;
 }
 
+static gboolean
+gtk_notebook_scroll (GtkWidget      *widget,
+                     GdkEventScroll *event)
+{
+  GtkNotebook *notebook = GTK_NOTEBOOK (widget);
+  GtkNotebookPrivate *priv = notebook->priv;
+  gint i;
+
+  if (!priv->cur_page)
+    return FALSE;
+
+  /* Only actually scroll when Mod1 is pressed.
+     This allows us to scroll from the page contents
+     or the action area too */
+  if (!(event->state & GDK_MOD1_MASK))
+    return FALSE;
+
+  switch (event->direction)
+    {
+    case GDK_SCROLL_RIGHT:
+    case GDK_SCROLL_DOWN:
+      gtk_notebook_next_page (notebook);
+      break;
+    case GDK_SCROLL_LEFT:
+    case GDK_SCROLL_UP:
+      gtk_notebook_prev_page (notebook);
+      break;
+    }
+
+  return TRUE;
+}
+
 static GList*
 get_tab_at_pos (GtkNotebook *notebook, gint x, gint y)
 {
diff --git a/gtk/gtkpathbar.c b/gtk/gtkpathbar.c
index 14e6ebe..3bc9e65 100644
--- a/gtk/gtkpathbar.c
+++ b/gtk/gtkpathbar.c
@@ -757,6 +757,10 @@ static gboolean
 gtk_path_bar_scroll (GtkWidget      *widget,
 		     GdkEventScroll *event)
 {
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   switch (event->direction)
     {
     case GDK_SCROLL_RIGHT:
diff --git a/gtk/gtkrange.c b/gtk/gtkrange.c
index 96e54c6..593fe84 100644
--- a/gtk/gtkrange.c
+++ b/gtk/gtkrange.c
@@ -2748,6 +2748,10 @@ gtk_range_scroll_event (GtkWidget      *widget,
   GtkRange *range = GTK_RANGE (widget);
   GtkRangePrivate *priv = range->priv;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (gtk_widget_get_realized (widget))
     {
       gdouble delta;
diff --git a/gtk/gtkscalebutton.c b/gtk/gtkscalebutton.c
index b6c10f4..1190c4b 100644
--- a/gtk/gtkscalebutton.c
+++ b/gtk/gtkscalebutton.c
@@ -848,6 +848,10 @@ gtk_scale_button_scroll (GtkWidget      *widget,
   if (event->type != GDK_SCROLL)
     return FALSE;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   d = gtk_scale_button_get_value (button);
   if (event->direction == GDK_SCROLL_UP)
     {
diff --git a/gtk/gtkscrolledwindow.c b/gtk/gtkscrolledwindow.c
index 3bd5f3b..9ffe354 100644
--- a/gtk/gtkscrolledwindow.c
+++ b/gtk/gtkscrolledwindow.c
@@ -1852,6 +1852,10 @@ gtk_scrolled_window_scroll_event (GtkWidget      *widget,
   scrolled_window = GTK_SCROLLED_WINDOW (widget);
   priv = scrolled_window->priv;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (event->direction == GDK_SCROLL_UP || event->direction == GDK_SCROLL_DOWN)
     range = priv->vscrollbar;
   else
diff --git a/gtk/gtkspinbutton.c b/gtk/gtkspinbutton.c
index 9a6b3ea..ac40967 100644
--- a/gtk/gtkspinbutton.c
+++ b/gtk/gtkspinbutton.c
@@ -1181,6 +1181,10 @@ gtk_spin_button_scroll (GtkWidget      *widget,
   GtkSpinButton *spin = GTK_SPIN_BUTTON (widget);
   GtkSpinButtonPrivate *priv = spin->priv;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (event->direction == GDK_SCROLL_UP)
     {
       if (!gtk_widget_has_focus (widget))
diff --git a/gtk/gtktreeview.c b/gtk/gtktreeview.c
index f7c5444..d33f001 100644
--- a/gtk/gtktreeview.c
+++ b/gtk/gtktreeview.c
@@ -15127,6 +15127,10 @@ gtk_tree_view_search_scroll_event (GtkWidget *widget,
 {
   gboolean retval = FALSE;
 
+  /* Ignore Alt-scroll to allow it to be taken by GtkNotebook */
+  if (event->state & GDK_MOD1_MASK)
+    return FALSE;
+
   if (event->direction == GDK_SCROLL_UP)
     {
       gtk_tree_view_search_move (widget, tree_view, TRUE);
